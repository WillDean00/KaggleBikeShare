scale_y_continuous(label = scales::comma)
install.packages("palmerpenguins")
glimpse(penguins)
#| warnings: false
#| output: false
library(tidyverse)
library(palmerpenguins)
glimpse(penguins)
library(tidyverse)
library(tidymodels)
library(vroom)
train <- vroom("train.csv")
test <- vroom("test.csv")
#poisson regression
install.packages("poissonreg")
library(poissonreg)
my_pois_model <- poisson_reg() %>%
set_engine("glm") %>%
set_model("regression") %>%
fit(formula=count ~ temp + humidity, data=train)
my_pois_model <- poisson_reg() %>%
set_engine("glm") %>%
set_mode("regression") %>%
fit(formula=count ~ temp + humidity, data=train)
bike_predictions <- predict(my_pois_model,
new_data=test)
bike_predictions ## Look at the output
pois_kaggle_submission <- bike_predictions %>%
bind_cols(., testData) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(datetime=as.character(format(datetime)))
pois_kaggle_submission <- bike_predictions %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=pois_kaggle_submission, file="./PoissonPreds.csv", delim = ",")
vroom_write(x=pois_kaggle_submission, file="./PoissonPreds.csv", delim = ",")
train <- vroom("train.csv")
library(vroom)
train <- vroom("train.csv")
test <- vroom("test.csv")
vroom(train)
library(poissonreg)
#Data Wrangling
my_recipe <- recipe(count ~ ., data = train)
library(tidymodels)
#Data Wrangling
my_recipe <- recipe(count ~ ., data = train)
#Data Wrangling
new_train <- train %>%
select(-casual, -registered) %>%
mutate(log_count = log(count))
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather = 4, 3, weather))
glimpse(new_train)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather = 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour"))
glimpse(my_recipe)
prep_recipe <- prep(my_recipe)
bake(prep_recipe, new_data = new_train)
prep_recipe <- prep(my_recipe)
train <- vroom("train.csv")
test <- vroom("test.csv")
#Data Wrangling
new_train <- train %>%
select(-casual, -registered) %>%
mutate(log_count = log(count))
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather = 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour"))
prep_recipe <- prep(my_recipe)
view(train)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour"))
prep_recipe <- prep(my_recipe)
bake(prep_recipe, new_data = new_train)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
glimpse(new_train)
view(train)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, 1 = spring, 2 = summer, 3 = fall, 4 = winter))
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, 1, 2, 3, 4 = "winter"))
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, 1, 2, 3, 4))
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, spring, 2, 3, 4))
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, spring, summer, fall, winter))
prep_recipe <- prep(my_recipe)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = as.character(season))
prep_recipe <- prep(my_recipe)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
step_mutate(season = factor(season, levels = 1:4, labels c("spring", "summer", "fall" , "winter"))
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))
prep_recipe <- prep(my_recipe)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter")))
prep_recipe <- prep(my_recipe)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime)
prep_recipe <- prep(my_recipe)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp) %>%
step_dummy(holiday)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp) %>%
step_dummy(holiday) %>%
step_dummy(workingday)
prep_recipe <- prep(my_recipe)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp) %>%
step_dummy(holiday()) %>%
step_dummy(workingday())
prep_recipe <- prep(my_recipe)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp) %>%
step_mutate(holiday = factor(holiday,levels = 0,1))
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp) %>%
step_mutate(holiday = factor(holiday,levels = 0,1)) %>%
step_mutate(workingday = factor(workingday,levels = 0,1))
prep_recipe <- prep(my_recipe)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(baked) %>%
add_model(lin_model) %>%
fit(data = new_train)
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp) %>%
step_dummy(holiday) %>%
step_mutate(workingday = factor(workingday,levels = 0,1))
prep_recipe <- prep(my_recipe)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp)
prep_recipe <- prep(my_recipe)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
new_train
new_train
#Data Wrangling
new_train <- train %>%
select(-casual, -registered) %>%
mutate(log_count = log(count)) %>%
mutate(weather = factor(weather))
view(train)
glimpse(new_train)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
#Data Wrangling
new_train <- train %>%
select(-casual, -registered) %>%
mutate(log_count = log(count)) %>%
mutate(weather = factor(weather))
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather,1,2,3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp)
prep_recipe <- prep(my_recipe)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather, levels = 1:3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
new_train
lin_preds <- predict(bike_workflow, new_data = test)
#Data Wrangling
new_train <- train %>%
select(-casual, -registered) %>%
mutate(count = log(count)) %>%
mutate(weather = factor(weather))
my_recipe <- recipe(log_count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather, levels = 1:3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp)
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
lin_preds <- predict(bike_workflow, new_data = test)
my_recipe <- recipe(count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather, levels = 1:3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
lin_preds <- predict(bike_workflow, new_data = test)
#Data Wrangling
new_train <- train %>%
select(-casual, -registered) %>%
mutate(count = log(count))
my_recipe <- recipe(count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather, levels = 1:3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
lin_preds <- predict(bike_workflow, new_data = test)
exp_lin_preds <- exp(lin_preds)
workflow_kaggle_submission <- exp_lin_preds %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=pois_kaggle_submission, file=".WorkflowPreds.csv", delim = ",")
workflow_kaggle_submission <- exp_lin_preds %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=workflow_kaggle_submission, file=".WorkflowPreds.csv", delim = ",")
my_recipe <- recipe(count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather, levels = 1:3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, atemp, holiday, workingday)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
lin_preds <- predict(bike_workflow, new_data = test)
exp_lin_preds <- exp(lin_preds)
workflow_kaggle_submission <- exp_lin_preds %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=workflow_kaggle_submission, file=".WorkflowPreds.csv", delim = ",")
my_recipe <- recipe(count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather, levels = 1:3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, temp, holiday, workingday)
prep_recipe <- prep(my_recipe)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
lin_preds <- predict(bike_workflow, new_data = test)
exp_lin_preds <- exp(lin_preds)
workflow_kaggle_submission <- exp_lin_preds %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=workflow_kaggle_submission, file=".WorkflowPreds.csv", delim = ",")
my_recipe <- recipe(count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather, levels = 1:3)) %>%
step_time(datetime, features = c("hour","minute")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, temp, holiday, workingday)
prep_recipe <- prep(my_recipe)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
my_recipe <- recipe(count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather, levels = 1:3)) %>%
step_time(datetime, features = c("hour" + "minute")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, temp, holiday, workingday)
view(baked)
my_recipe <- recipe(count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather, levels = 1:3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, temp, holiday, workingday) %>%
step_mutate(windspeed = ifelse(windspeed == 0, "no wind", ifelse(windspeed < 20, "somewhat windy", "windy")))
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
new_train
lin_preds <- predict(bike_workflow, new_data = test)
exp_lin_preds <- exp(lin_preds)
workflow_kaggle_submission <- exp_lin_preds %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=workflow_kaggle_submission, file=".WorkflowPreds.csv", delim = ",")
prep_recipe <- prep(my_recipe)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
new_train
lin_preds <- predict(bike_workflow, new_data = test)
exp_lin_preds <- exp(lin_preds)
workflow_kaggle_submission <- exp_lin_preds %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=workflow_kaggle_submission, file=".WorkflowPreds.csv", delim = ",")
prep_recipe <- prep(my_recipe)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
my_recipe <- recipe(count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather, levels = 1:3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, temp, holiday, workingday) %>%
step_mutate(windspeed = ifelse(windspeed == 0, 0, ifelse(windspeed < 20, 1, 2)))
prep_recipe <- prep(my_recipe)
baked <- bake(prep_recipe, new_data = new_train)
view(baked)
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
lin_preds <- predict(bike_workflow, new_data = test)
exp_lin_preds <- exp(lin_preds)
workflow_kaggle_submission <- exp_lin_preds %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=workflow_kaggle_submission, file=".WorkflowPreds.csv", delim = ",")
my_recipe <- recipe(count ~ ., data = new_train) %>%
step_mutate(weather =ifelse(weather == 4, 3, weather)) %>%
step_mutate(weather = factor(weather, levels = 1:3)) %>%
step_time(datetime, features = c("hour")) %>%
step_mutate(season = factor(season, levels = 1:4, labels = c("spring", "summer", "fall" , "winter"))) %>%
step_rm(datetime, temp, holiday, workingday) %>%
step_mutate(windspeed = ifelse(windspeed == 0, 0, 1))
lin_model <- linear_reg() %>%
set_engine("lm") %>%
set_mode("regression")
bike_workflow <- workflow() %>%
add_recipe(my_recipe) %>%
add_model(lin_model) %>%
fit(data = new_train)
lin_preds <- predict(bike_workflow, new_data = test)
exp_lin_preds <- exp(lin_preds)
workflow_kaggle_submission <- exp_lin_preds %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count=.pred) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=workflow_kaggle_submission, file=".WorkflowPreds.csv", delim = ",")
